services:
  yii2-app:
    build: .
    container_name: yii2-app
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
    environment:
      - YII_DEBUG=1
      - YII_ENV=dev

  mysql:
    image: mysql:8
    container_name: mysql-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cook
      MYSQL_USER: zavristche
      MYSQL_PASSWORD: zavristche
    volumes:
      - ./db:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
      
  # vue-app:
  #   container_name: vue-app
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - './frontend:/app:delegated'
  #     - '/app/node_modules'
  #   ports:
  #     - '8082:8082'
  #   environment:
  #     - VUE_CLI_HMR_PORT=8082

  # PROJECT
  # vue-app:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: vue_app
  #   ports:
  #     - "8082:8082"  # Теперь Nginx слушает 8082
  #   depends_on:
  #     - yii2-app

  # DEVELOPER
  vue-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-app
    ports:
      - "5173:5173"  # Vite для разработки
    volumes:
      - ./frontend:/app  # Прокидываем код внутрь контейнера
      - /app/node_modules  # Исключаем node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true  # Для работы live-reload в Docker
